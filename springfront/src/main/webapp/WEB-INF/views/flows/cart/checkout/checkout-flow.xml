<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow.xsd">
	<!-- implicit model assignment -->
	<var name="shipping" class="com.fashionagariya.springback.dto.Address"/>
	
	<!-- explicitly adding RegisterModel instance -->
	<on-start>
		<evaluate expression="checkoutHandler.init(currentUser.name)" result="flowScope.checkoutModel" />
	</on-start>

	<!-- Start state for address selection-->
	<view-state id="shipping" view="flows/cart/checkout/order-address" model="shipping">
		<on-entry>
			<evaluate expression="checkoutHandler.getShippingAddresses(flowScope.checkoutModel)" result="viewScope.addresses" />
		</on-entry>
		<transition on="addressSelection" to="saveAddressSelection" validate="false"/>
		<transition on="saveAddress" to="saveAddress"/>
	</view-state>
	<!-- Action state to save address -->
	<action-state id="saveAddressSelection">
		<evaluate expression="checkoutHandler.saveAddressSelection(flowScope.checkoutModel, requestParameters.shippingId)" />
		<transition on="success" to="payment" />
	</action-state>
	<!-- Action state to save address -->
	<action-state id="saveAddress">
		<evaluate expression="checkoutHandler.saveAddress(flowScope.checkoutModel, shipping)" />
		<transition on="success" to="payment" />
	</action-state>
	
	<!-- Payment mode view state -->
	<view-state id="payment" view="flows/cart/checkout/order-payment" model="flowScope.checkoutModel">
		<transition on="pay" to="saveOrder"/>
	</view-state>
	<!-- Action state to save order -->	
	<action-state id="saveOrder">
		<evaluate expression="checkoutHandler.saveOrder(flowScope.checkoutModel)" />
		<transition on="success" to="receipt" />
	</action-state>
	
	<!-- End state -->
	<end-state id="receipt" view="flows/cart/checkout/order-confirm">
		<on-entry>
			<evaluate expression="checkoutHandler.getOrderDetail(flowScope.checkoutModel)" result="requestScope.orderDetail" />
		</on-entry>
	</end-state>
	<end-state id="home" view="externalRedirect:contextRelative:/home"/>
	<end-state id="error" view="flows/shared/error" />
	
	<!-- Global transition -->
	<global-transitions>
		<transition on="home" to="home" validate="false"/>
		<transition on-exception="java.lang.Exception" to="error"/>
	</global-transitions>

	
</flow>